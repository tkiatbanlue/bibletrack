// Script to verify Firestore data\nconst admin = require('firebase-admin');\nrequire('dotenv').config();\n\n// Initialize Firebase Admin SDK with service account\n// You'll need to set up the service account credentials in your environment\nconst serviceAccount = {\n  \"type\": \"service_account\",\n  \"project_id\": process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  \"private_key_id\": process.env.FIREBASE_PRIVATE_KEY_ID,\n  \"private_key\": process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n'),\n  \"client_email\": process.env.FIREBASE_CLIENT_EMAIL,\n  \"client_id\": process.env.FIREBASE_CLIENT_ID,\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": process.env.FIREBASE_CLIENT_CERT_URL\n};\n\n// Check if we have service account credentials\nif (!serviceAccount.private_key || !serviceAccount.client_email) {\n  console.log('‚ö†Ô∏è  Firebase Admin credentials not found.');\n  console.log('To verify Firestore data, please set up service account credentials:');\n  console.log('1. Go to Firebase Console -> Project Settings -> Service Accounts');\n  console.log('2. Generate a new private key and download the JSON file');\n  console.log('3. Set the following environment variables:');\n  console.log('   - FIREBASE_PRIVATE_KEY_ID');\n  console.log('   - FIREBASE_PRIVATE_KEY');\n  console.log('   - FIREBASE_CLIENT_EMAIL');\n  console.log('   - FIREBASE_CLIENT_ID');\n  console.log('   - FIREBASE_CLIENT_CERT_URL');\n  process.exit(0);\n}\n\n// Initialize Firebase Admin SDK\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n});\n\nconst db = admin.firestore();\n\nasync function checkFirestoreData() {\n  console.log('üîç Checking Firestore data...');\n  \n  try {\n    // Check progress collection\n    console.log('\\nüìã Progress Collection:');\n    const progressSnapshot = await db.collection('progress').limit(10).get();\n    console.log(`Found ${progressSnapshot.size} progress documents`);\n    \n    if (progressSnapshot.size > 0) {\n      console.log('Sample progress documents:');\n      progressSnapshot.forEach((doc, index) => {\n        if (index < 3) { // Show only first 3\n          console.log(`  ${doc.id}:`, doc.data());\n        }\n      });\n      if (progressSnapshot.size > 3) {\n        console.log(`  ... and ${progressSnapshot.size - 3} more`);\n      }\n    }\n    \n    // Check users collection\n    console.log('\\nüë• Users Collection:');\n    const usersSnapshot = await db.collection('users').limit(10).get();\n    console.log(`Found ${usersSnapshot.size} user documents`);\n    \n    if (usersSnapshot.size > 0) {\n      console.log('Sample user documents:');\n      usersSnapshot.forEach((doc, index) => {\n        if (index < 3) { // Show only first 3\n          console.log(`  ${doc.id}:`, doc.data());\n        }\n      });\n      if (usersSnapshot.size > 3) {\n        console.log(`  ... and ${usersSnapshot.size - 3} more`);\n      }\n    }\n    \n    console.log('\\n‚úÖ Firestore data check completed!');\n  } catch (error) {\n    console.error('‚ùå Error checking Firestore data:', error.message);\n  }\n}\n\n// Run the check\ncheckFirestoreData();